package com.example.bluetoothvulnerabilityscanner;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;

import com.denzcoskun.imageslider.ImageSlider;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;

public class TipsInfo extends AppCompatActivity{

    private static final String TAG = "Tips";

    FirebaseDatabase database = FirebaseDatabase.getInstance("https://bluetoothvulnscannerdb-default-rtdb.asia-southeast1.firebasedatabase.app");

    Context context = this;
    ArrayList<DataTips> list;
    RecyclerView recyclerView;
    AdapterTips adaptertips;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_tips_info);
        setTitle("Tips");

        recyclerView = findViewById(R.id.tipsList);
        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(context));

        //to disallow recycle view from scrolling as we want whole screen to scroll with nestedscrollview
        recyclerView.setNestedScrollingEnabled(false);

        list = new ArrayList<>();
        adaptertips = new AdapterTips(context, list);
        recyclerView.setAdapter(adaptertips);

        DatabaseReference tips = database.getReference("Tips");

        //fetch all the tips from the firebase database tips branch
        tips.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {

                for (DataSnapshot ds : snapshot.getChildren()) {
                    String tipID = ds.getKey();

                    String title = ds.child("title").getValue(String.class);
                    String value = ds.child("value").getValue(String.class);

                    Log.v(TAG, "TipsID: " + tipID);
                    Log.v(TAG, "title: " + title);
                    Log.v(TAG, "value: " + value);

                    //for each child branch, add the title and content value as a new object
                    //add the new objects into the list
                    list.add(new DataTips(title, value));
                }

                //call the adapter again to notify changes
                adaptertips.notifyDataSetChanged();
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {
                // Failed to read description value
                Log.w(TAG, "Failed to read title value.", error.toException());

            }
        });

    }
}