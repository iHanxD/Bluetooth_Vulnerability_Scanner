package com.example.bluetoothvulnerabilityscanner;

import android.content.Context;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.denzcoskun.imageslider.ImageSlider;
import com.denzcoskun.imageslider.models.SlideModel;

import java.util.ArrayList;

public class AdapterPocDemoCard extends RecyclerView.Adapter<AdapterPocDemoCard.MyViewHolder>{

    Context context;
    ArrayList<DataPocDemoCard> list;
    private OnItemListener onItemListener;


    public AdapterPocDemoCard(Context context, ArrayList<DataPocDemoCard> list, OnItemListener onItemListener){
        this.context = context;
        this.list = list;
        this.onItemListener = onItemListener;
    }

    public AdapterPocDemoCard(Context context, ArrayList<DataPocDemoCard> list) {
    }


    @NonNull
    @Override
    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {

        View v = LayoutInflater.from(context).inflate(R.layout.item_demopoccard,parent, false);
        return new MyViewHolder(v, onItemListener);

    }

    @Override
    public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {

        DataPocDemoCard dataPocDemoCard =  list.get(position);

        //Capitalize first character if it is not.
        String title = dataPocDemoCard.getTitle();
        String capitalized = title.substring(0,1).toUpperCase() + title.substring(1);

        Log.v("capitalized", capitalized);

        holder.title.setText(capitalized);
        holder.type.setText("Type: " + dataPocDemoCard.getType());

        ArrayList<SlideModel> slideModels = new ArrayList<>();
        ArrayList<String> imageLinksHolder = dataPocDemoCard.getImageLinks();


        if(imageLinksHolder.size()!=0){

            for(int i=0; i<imageLinksHolder.size(); i++){

                String linkvalue = imageLinksHolder.get(i);
                if(linkvalue!=null){
                    slideModels.add(new SlideModel(linkvalue,null));
                }
            }
            holder.imageSlider.setImageList(slideModels);
            }
        }


    @Override
    public int getItemCount() {
        return list.size();
    }

    public static class MyViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {

        TextView title, type;
        ImageSlider imageSlider;
        OnItemListener onItemListener;

        public MyViewHolder(@NonNull View itemView, OnItemListener onItemListener){
            super(itemView);
            title = itemView.findViewById(R.id.TitleInfo);
            type = itemView.findViewById(R.id.TitleType);
            imageSlider = itemView.findViewById(R.id.image_slider);

            this.onItemListener = onItemListener;
            itemView.setOnClickListener(this);

        }

        @Override
        public void onClick(View view) {
            onItemListener.onItemClick(getAdapterPosition());
        }

    }

    public interface OnItemListener{
        void onItemClick(int position);
    }


}



